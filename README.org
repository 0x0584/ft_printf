* About

=ft_printf= is a project which leads to the AI branch. sounds good! It was based on the [[https://linux.die.net/man/3/printf][printf(3)]] in the man page. The main idea is to take a [[https://alvinalexander.com/programming/printf-format-cheat-sheet][formatting string]] and a set of arguments, process those arguments then print the /formatted result/ to standard output. Also we can print the result to a file descriptor or a string using either =ft_dprintf= or =ft_asprintf= (ft_asprintf allocates memory).

To get into this, we need to handle [[https://en.wikipedia.org/wiki/UTF-8][UTF-8]] in order to print =wchar_t= strings, also in order to handle floating point numbers we need to handle [[http://www.ryanjuckett.com/programming/printing-floating-point-numbers/][IEEE 754]] format. Otherwise, the rest is just conversions from int to ASCII and checking this and setting that.. mostly if-statements.

* Features

** Special

+ taking width and precision via argument as in =%*d= or =%.*s= or even =%*.*f=.
+ reordering arguments using =d$= as in =%2$#08x=, which might be re-usable.
+ Note :: The two should not be mixed, or you the behavior is undefined. Also if =$= is used with one argument, all next arguments must have =$=, otherwise, the behavior is undefined.

** Conversions

+ integer numbers
    + =dDi= as =int=
    + =bBouxX= as =unsigned int= in bases 2, 8, 10, 16
+ floating point numbers
    + =fF= as normal floating point
    + =eE= as scientific exponent
    + =gG= as suitable representation
    + =aA= as hexadecimal representation
+ strings and characters
    + =sS= for string and UTF-8 strings
    + =cC= for characters and UTF-8 characters
+ memory addresses =p=

** Length modifiers

+ integer numbers for either signed ot unsigned
    + =hh= as =char=
    + =h= as =short=
    + =l= as =long= (if used with =sc= it's like =SC=. ignored when =fFeEgGaA=)
    + =ll= as =long long=
    + =z= as =size_t=
    + =j= as =intmax_t=
+ floating point numbers
    + =L= as =long double= used with =fFeEgGaA=

** Colors

used like =%{color}= and the colors are te standard POSIX 8 colors, red, yellow, green, blue, cyan, magenta. As well as black & white. Having a suffix =_fg= or =_bg= for foregraound and background. =reset= is a special color, it resets the output to the original color.

* Examples

#+BEGIN_SRC c
// (-0010) (+00010)
ft_printf("(% 0*d) (%+*.*d)", 5, -10, 5, 5, 10);

// (001412) (0x0584) (001412) (002604)
ft_printf("(%1$#06d) (%1$#06x) (%1$#06u) (%1$#06o)", 1412);

// (+3) (3.142e+00) (0x1.5bedfa43fe5c9p+1) (  +3.142)
ft_printf("(%2$.f) (%1$05.3e) (%2$a) (%1$8.4g)", 3.1415, 2.7182);

// (     ♥♦♣) (     thi) (    ♥♦♣♠) (    this)
ft_printf("(%2$8.3ls) (%1$8.3s) (%2$8ls) (%1$8s)", "this", L"♥♦♣♠");
#+END_SRC
